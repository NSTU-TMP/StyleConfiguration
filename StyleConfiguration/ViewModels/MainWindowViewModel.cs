using System.Collections.ObjectModel;using System.Reactive;using System.Reactive.Linq;using Avalonia.Controls;using ReactiveUI;using ReactiveUI.Fody.Helpers;using StyleConfiguration.Config;namespace StyleConfiguration.ViewModels{    public class MainWindowViewModel : ReactiveObject, IScreen    {        public ObservableCollection<MenuItem>? Items { get; set; }        public MainWindowViewModel()        {            ConfirmPassword = ReactiveCommand.CreateFromTask(async () =>            {                var reader = new UserChecker(UserPassword, UserLogin);                if (reader.CmpUsers())                {                    var configReader = new ConfigReader(reader.PathToConfig);                    if (configReader.Parsing())                    {                        Items = new ObservableCollection<MenuItem>();                        Items = configReader.Items;                        await Router.Navigate.Execute(new WorkPlaceViewModel(Items));                    }                    else                    {                        UserLogin = "";                        UserPassword = "";                        await MessageBox.Avalonia.MessageBoxManager.GetMessageBoxStandardWindow("Ошибка файла", "Неверная кофигурация")                            .Show();                    }                }                else                {                    UserLogin = "";                    UserPassword = "";                }            });        }        public ReactiveCommand<Unit, Unit> ConfirmPassword { get; }        [Reactive] public string? UserLogin { get; set; }        [Reactive] public string? UserPassword { get; set; }        public RoutingState Router { get; } = new();    }}