using System.Reactive;using System.Reactive.Linq;using ReactiveUI;using ReactiveUI.Fody.Helpers;using StyleConfiguration.Config;namespace StyleConfiguration.ViewModels{    public class MainWindowViewModel : ReactiveObject, IScreen    {        public MainWindowViewModel()        {            ConfirmPassword = ReactiveCommand.CreateFromTask(async () =>            {                var reader = new UserChecker(UserPassword, UserLogin);                if (reader.CmpUsers()) await Router.Navigate.Execute(new WorkPlaceViewModel(reader.PathToConfig));                else                {                    UserLogin = "";                    UserPassword = "";                }            });        }        public ReactiveCommand<Unit, Unit> ConfirmPassword { get; }        [Reactive] public string? UserLogin { get; set; }        [Reactive] public string? UserPassword { get; set; }        public RoutingState Router { get; } = new();    }}